name: "Genius"
url: "http://genius.com/{artist}-{title}-lyrics"
extractor: '(?s)<div\s+class="song_body-lyrics"[^>]*?>[\s\S]*?<p>(?P<lyrics>[\s\S]*?)</p>'

common-lut: &common_lut
  '!!!': chk-chik-chick

filters:
- &nonalpha_filter [regex, '(\s([^a-z0-9\s-])+(\s|\W)+)|(\w[^a-z0-9-]+(\s|\W)+)', " "]
- &featured_filter [regex, '(\W|\s)+(feat.+|ft[\W\s]+|(f\.\s)).+', " "] # Strip F./ft/eat/uring + everything after
- &medial_nonalpha_filter [regex, '([a-z0-9%])[^\sa-z0-9%]+([a-z0-9%]+)', "$1-$2"]
- &garbage_filter [regex, '\.+|,+|(\W+$)|(^\W+)|''', ""]

variables:
- name: artist
  lookup:
    '<<': *common_lut
  filters:
  - [strip_diacritics]
  - [lowercase]
  - [regex, '^The\s', ""]
  - *featured_filter
  - *garbage_filter
  - *medial_nonalpha_filter
  - *nonalpha_filter
  - [strip_nonascii, -]
- name: title
  lookup:
    '<<': *common_lut
  filters:
  - [strip_diacritics]
  - [lowercase]
  - [regex, '\s+(feat.+|ft[\W\s]+|(f\.\s)).+', " "]
  - [regex, '\s&\s', " and "]
  - *garbage_filter
  - *medial_nonalpha_filter
  - *nonalpha_filter
  - [strip_nonascii, -]

filters:
- [strip_html]
- [clean_spaces]
- [utf8_encode]
- [regex, 'googletag.*\);', "\n"]